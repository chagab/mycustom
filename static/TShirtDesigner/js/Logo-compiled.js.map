{"version":3,"sources":["Logo.es6"],"names":["Logo","file","designer","image","Image","src","x","y","ratio","canvas","width","height","right","bottom","nb","logo","length","draggingImage","draggingResizer","resizerRadius","xRot","yRot","aRot","rr","hitImage","hit","ci","anchorHitTestImage","dx","dy","drawDragAnchor","fill","ctx","beginPath","arc","Math","PI","closePath","drawDragging","X","Y","Right","Bottom","moveTo","lineTo","strokeStyle","stroke","dragg","e","conserverRatio","mouseX","mouseY","frameCount","history","saveState","startX","startY"],"mappings":"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","file":"Logo-compiled.js","sourcesContent":["function Logo(file, designer) {\n  this.image = new Image();\n  if (file) {\n    this.image.src = file.src;\n  }\n  this.x = 50;\n  this.y = 50;\n  this.ratio = (1 / 2) * designer.canvas.width / this.image.width;\n  this.width = this.image.width * this.ratio;\n  this.height = this.image.height * this.ratio;\n  this.right = this.image.x + this.image.width;\n  this.bottom = this.image.y + this.image.height;\n  this.nb = designer.logo.length;\n  this.draggingImage = false;\n  this.draggingResizer;\n  this.resizerRadius = 8;\n  //variables pour les rotations de l'image\n  this.xRot = 0;\n  this.yRot = 0;\n  this.aRot = 0;\n  this.rr = this.resizerRadius * this.resizerRadius;\n  this.hitImage = function(x, y) {\n    //////////////////////////////////////////////////////////////////////\n    //methode that return true if the image what hit and wrong otherwise//\n    //it also change the current image of the designer !\t\t\t\t//\n    //////////////////////////////////////////////////////////////////////\n    var hit = (x > this.x && x < (this.x + this.width) && y > this.y && y < (this.y + this.height));\n    if (hit) designer.ci = this.nb;\n    return hit;\n  }\n  this.anchorHitTestImage = function(x, y) {\n    ///////////////////////////////////////////////////////////////////////////////\n    //methode that return the \"index\" of the anchor that was hit and -1 otherwise//\n    ///////////////////////////////////////////////////////////////////////////////\n    // top-left\n    var dx = x - this.x;\n    var dy = y - this.y;\n    if (dx * dx + dy * dy <= this.rr) {\n      return (0);\n    }\n    // top-right\n    dx = x - this.right;\n    dy = y - this.y;\n    if (dx * dx + dy * dy <= this.rr) {\n      return (1);\n    }\n    // bottom-right\n    dx = x - this.right;\n    dy = y - this.bottom;\n    if (dx * dx + dy * dy <= this.rr) {\n      return (2);\n    }\n    // bottom-left\n    dx = x - this.x;\n    dy = y - this.bottom;\n    if (dx * dx + dy * dy <= this.rr) {\n      return (3);\n    }\n    return (-1);\n  }\n  this.drawDragAnchor = function(x, y) {\n    ///////////////////////////////\n    //methode that draw an anchor//\n    ///////////////////////////////\n    fill(0);\n    designer.ctx.beginPath();\n    designer.ctx.arc(x, y, this.resizerRadius, 0, Math.PI * 2, false);\n    designer.ctx.closePath();\n    designer.ctx.fill();\n  }\n  this.drawDragging = function(X, Y, Right, Bottom) {\n    ////////////////////////////////////////////////////////////////\n    //methde that draw the anchor and the sqaure around the image //\n    ////////////////////////////////////////////////////////////////\n    designer.ctx.beginPath();\n    designer.ctx.moveTo(X, Y);\n    designer.ctx.lineTo(Right, Y);\n    designer.ctx.lineTo(Right, Bottom);\n    designer.ctx.lineTo(X, Bottom);\n    designer.ctx.closePath();\n    designer.ctx.strokeStyle = '#0';\n    designer.ctx.stroke();\n    this.drawDragAnchor(X, Y);\n    this.drawDragAnchor(Right, Y);\n    this.drawDragAnchor(Right, Bottom);\n    this.drawDragAnchor(X, Bottom);\n  }\n  this.dragg = function(e) {\n    /////////////////////////////////////////////////\n    //methode that allow the user to drag the image//\n    /////////////////////////////////////////////////\n    //if the user wants to resize the image\n    if (this.draggingResizer > -1) {\n      // resize the image\n      //if the ratio don't need to be respected\n      if (!designer.conserverRatio) {\n        switch (this.draggingResizer) {\n          case 0:\n            //top-left\n            this.x = mouseX;\n            this.y = mouseY;\n            this.width = this.right - mouseX;\n            this.height = this.bottom - mouseY;\n            break;\n          case 1:\n            //top-right\n            this.y = mouseY;\n            this.width = mouseX - this.x;\n            this.height = this.bottom - mouseY;\n            break;\n          case 2:\n            //bottom-right\n            this.width = mouseX - this.x;\n            this.height = mouseY - this.y;\n            break;\n          case 3:\n            //bottom-left\n            this.x = mouseX;\n            this.width = this.right - mouseX;\n            this.height = mouseY - this.y;\n            break;\n        }\n      }\n      //if the ratio need to be respected\n      else {\n        switch (this.draggingResizer) {\n          case 0:\n            //top-left\n            this.x = mouseX;\n            this.y = mouseY;\n            this.ratio = (this.right - mouseX) / this.width;\n            this.width = this.right - mouseX;\n            break;\n          case 1:\n            //top-right\n            this.y = mouseY;\n            this.ratio = (mouseX - this.x) / this.width;\n            this.width = mouseX - this.x;\n            break;\n          case 2:\n            //bottom-right\n            this.ratio = (mouseX - this.x) / this.width;\n            this.width = mouseX - this.x;\n            break;\n          case 3:\n            //bottom-left\n            this.x = mouseX;\n            this.ratio = (this.right - mouseX) / this.width;\n            this.width = this.right - mouseX;\n            break;\n        }\n        this.height *= this.ratio;\n      }\n      //minimum height and width for the image\n      if (this.width < 25) this.width = 25;\n      if (this.height < 25) this.height = 25;\n      // set the image right and bottom property\n      this.right = this.x + this.width;\n      this.bottom = this.y + this.height;\n      //save the current state of the image (every 25th frames)\n      if (frameCount % 25 == 1) designer.history.saveState();\n    }\n    //if the user want to move the image\n    else if (this.draggingImage) {\n      // move the image by the amount of the latest drag\n      var dx = mouseX - designer.startX;\n      var dy = mouseY - designer.startY;\n      this.x += dx;\n      this.y += dy;\n      this.right += dx;\n      this.bottom += dy;\n      // reset designer startXY for next time\n      designer.startX = mouseX;\n      designer.startY = mouseY;\n      if (frameCount % 25 == 1) designer.history.saveState();\n    }\n  }\n}\n"]}