{
  "_args": [
    [
      {
        "raw": "upgrade",
        "scope": null,
        "escapedName": "upgrade",
        "name": "upgrade",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/gabrielchatelain/Desktop/mycustom"
    ]
  ],
  "_from": "upgrade@latest",
  "_id": "upgrade@1.1.0",
  "_inCache": true,
  "_location": "/upgrade",
  "_npmUser": {
    "name": "cobbdb",
    "email": "cobbdb@gmail.com"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "upgrade",
    "scope": null,
    "escapedName": "upgrade",
    "name": "upgrade",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/upgrade/-/upgrade-1.1.0.tgz",
  "_shasum": "4a50875ec5c715d19379799f0590a0e796958f61",
  "_shrinkwrap": null,
  "_spec": "upgrade",
  "_where": "/Users/gabrielchatelain/Desktop/mycustom",
  "author": {
    "name": "Dan Cobb",
    "email": "cobbdb@gmail.com",
    "url": "http://sites.google.com/site/petitgibier/"
  },
  "bugs": {
    "url": "https://github.com/cobbdb/upgrade/issues"
  },
  "dependencies": {},
  "description": "A simple Node websocket library to handle http upgrades.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "4a50875ec5c715d19379799f0590a0e796958f61",
    "tarball": "https://registry.npmjs.org/upgrade/-/upgrade-1.1.0.tgz"
  },
  "homepage": "https://github.com/cobbdb/upgrade",
  "keywords": [
    "websocket",
    "http",
    "upgrade",
    "native",
    "simple"
  ],
  "license": "MIT",
  "main": "upgrade.js",
  "maintainers": [
    {
      "name": "cobbdb",
      "email": "cobbdb@gmail.com"
    }
  ],
  "name": "upgrade",
  "optionalDependencies": {},
  "readme": "# Upgrade\n### A simple Node websocket library to handle http upgrades.\nVersion **1.1.0**\n\n---\n* See: [NPM Page](https://npmjs.org/package/upgrade)\n* See: [Github Repo](http://www.github.com/cobbdb/upgrade)\n\n### Installation\n> ```\nnpm install upgrade\n```\n\n### Usage\n###### Here is an example of a basic upgrade setup:\n> ```JavaScript\n// server.js\nvar http = require('http');\nvar upgrade = require('upgrade');\nvar server = http.createServer();\nserver.on('upgrade', function (req, socket) {\n    var send = upgrade.getSend(socket);\n    upgrade.writeHead(req, socket);\n    socket.on('data', function (buff) {\n        var data = upgrade.getData(buff);\n        console.log('> ' + data);\n    });\n    send('Welcome to the Server!');\n});\nserver.listen(8000);\n```\n```JavaScript\n// client.js\nvar socket = new WebSocket('ws://localhost:8000');\nsocket.onopen = function () {\n    socket.send('Hello Server!');\n    console.log('> Socket Open.');\n};\nsocket.onmessage = function (evt) {\n    var msg = evt.data;\n    console.log('> ' + msg);\n};\n```\n\n\n## writeHead(req, socket)\nWrite upgrade handshake header to socket.\n\n**Parameters**\n\n* {ServerRequest} req - ServerRequest from HTTPServer.\n* {Socket} socket - Socket from upgrade event.\n\n```JavaScript\nserver.on('upgrade', function (req, socket) {\n    upgrade.writeHead(req, socket);\n```\n\n\n## getData(buffer)\nRemoves mask from incoming frame.\n\n**Parameters**\n\n* {Buffer} buffer - Buffer object from data event of WebSocket.\n\n**Returns** {String} Unmasked data.\n\n```JavaScript\nsocket.on('data', function (buff) {\n    var data = upgrade.getData(buff);\n```\n\n\n## frameData(msg)\nWraps data in a websocket frame. Note that UpgradeJS does not support payloads larger than 125 bytes.\n\n**Parameters**\n\n* {String} msg - Some data to wrap.\n\n**Returns** {Buffer} Hex encoded Buffer.  \n**Throws** {RangeError}\n\n```JavaScript\nvar data = exports.frameData(message);\nsocket.write(data);\n```\n\n\n## getSend(socket)\nConvenience method to lock send behavior to a specific socket.\n\n**Parameters**\n\n* {Socket} socket - The socket to communicate over.\n\n**Returns** {Function} Send behavior using a specific socket.\n\n```JavaScript\nvar send = upgrade.getSend(socket);\nsend('foo');\nsend('bar');\n```\n\n\n## send(msg, socket)\nConvenience method for sending framed data.\n\n**Parameters**\n\n* {String} msg - Data to send across websocket.\n* {Socket} socket - The socket to commincate over.\n\n**Throws** {RangeError}\n\n```JavaScript\nupgrade.send('foo', socket);\nupgrade.send('bar', socket);\n```\n\n---\nBy Dan Cobb: <cobbdb@gmail.com> - [petitgibier.sytes.net](http://petitgibier.sytes.net)  \nLicense: MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/cobbdb/upgrade.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.0"
}
